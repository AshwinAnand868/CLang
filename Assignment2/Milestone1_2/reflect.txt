==============================================
Name:           Ashwin Anand
Student Number: 152042206
Email:          aanand24@myseneca.ca
Section:        IPC144NDD
Date:           
==============================================
 Assignment:     2
 Milestone:      2 (reflection part)
==============================================

These first two milestones of assignment assisted me to understand more clearly what I have learned in this or previous week(s). I got an opportunity to declare structures and protoypes of functions and also I got more familiarized with defining various kinds of fuctions according to the need in the program. However, apart from this basic information, one thing that seems to me of great importance in the milestones is the reusability part of some functions that is, it helped me greatly in how to reuse the function again and again rather than creating the same logic for every same thing from the scratch or by copy-pasting. I used some functions several times in this assignment without redefinition ation, for example, the yes() or the pause() functions. I just called these functions whenever there was a need in the program.

Now, aside from my learnings, let's discuss what are functions. Functions are the components of the program that contains sets of statements which are coded to complete a specific task in the whole application. These can be accessed multiple times whenever there is a need for the same logic in the program which basically means that they eliminate redundancy in the program and helps to achieve a modular solution. Before discussing the need of functions in any programming language, let me first discuss what would be the scenario without functions. If there are no functions then how would the code or program would like in a file; it will become less readable because all the logics are present at one place. It also makes the program less reusable because one might not be able to use the whole application as a logic for some other application, whose some functionality match with that application but most is independent. Moreover, if every thing in a same file, then updation of some part of the code may be very difficult to do.

Finally, again moving to assignment part. In assignment, helper functions are in a different module and there can be some reasons of why is this the case. However, the main one, in my opinion, would be that both contacts and contactHelpers file are somewhat different in terms of functionality from each other. This is because the code in contactHelpers file is related to the development of the application which means it contains functions that can be used to make the application to work more sensibly, but they are not direcly related to the people whose address are stored in the application This thing has been done specifically in the contacts file not in the contactHelpers file. For example, functions such as getInt(), yes(), clearKeyboard() in contactsHelpers file are meant for application but the functions such as getName(), getAddress in contacts are related to the users. Moreover, another reason can be that seperating logics makes the files more reasonable and easily understandable. Undoubtedly, one can also declare all the functions present in these two files in the main source file (a2ms2.c here) without bothering to create those files seperately, but does it seems logical to do? ; all the functionality in one source file. Therefore, without functions there would be readability and independency problem. So, that's why functions are important in any kind of programming language.